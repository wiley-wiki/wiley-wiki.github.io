(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{808:function(a,t,s){"use strict";s.r(t);var e=s(95),v=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"文件上传漏洞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件上传漏洞"}},[a._v("#")]),a._v(" 文件上传漏洞")]),a._v(" "),s("h2",{attrs:{id:"前端验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端验证"}},[a._v("#")]),a._v(" 前端验证")]),a._v(" "),s("p",[a._v("文件上传前，前端JS判断文件后缀名，从而判断是否为图片，抓包修改即可绕过")]),a._v(" "),s("h2",{attrs:{id:"content-type方式绕过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#content-type方式绕过"}},[a._v("#")]),a._v(" Content-type方式绕过")]),a._v(" "),s("p",[a._v("如果通过判断 "),s("code",[a._v("Content-type")]),a._v(" 方式是否为图片，在抓包时修改数据包中的 "),s("code",[a._v("Content-type")]),a._v(" 参数中的值，改成 "),s("code",[a._v("image/jpeg")]),a._v("、"),s("code",[a._v("image/png")]),a._v("等图片格式即可绕过")]),a._v(" "),s("h2",{attrs:{id:"文件上传黑名单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件上传黑名单"}},[a._v("#")]),a._v(" 文件上传黑名单")]),a._v(" "),s("p",[a._v("服务端设置了文件上传的黑名单，不能上传 "),s("code",[a._v("php")]),a._v(" 文件时，上传 "),s("code",[a._v(".php3")]),a._v(","),s("code",[a._v(".php4")]),a._v(","),s("code",[a._v(".php5")]),a._v(","),s("code",[a._v(".phtml")]),a._v(" "),s("code",[a._v("php2")]),a._v(" 等能够解析的文件格式即可绕过")]),a._v(" "),s("p",[a._v("JSP的脚本有 "),s("code",[a._v("jspx")]),a._v(","),s("code",[a._v("jspf")]),a._v(" "),s("code",[a._v("jspa")]),a._v(" "),s("code",[a._v("jsw")]),a._v(" "),s("code",[a._v("jsv")]),a._v(" "),s("code",[a._v("jtml")]),a._v(" 解析格式")]),a._v(" "),s("p",[a._v("ASP的脚本有 "),s("code",[a._v("asa")]),a._v(","),s("code",[a._v("cer")]),a._v(","),s("code",[a._v("aspx")]),a._v(" "),s("code",[a._v("asax")]),a._v(" "),s("code",[a._v("ascx")]),a._v(" "),s("code",[a._v("ashx")]),a._v(" "),s("code",[a._v("asmx")]),a._v(" 解析格式")]),a._v(" "),s("h2",{attrs:{id:"htaccess文件绕过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#htaccess文件绕过"}},[a._v("#")]),a._v(" .htaccess文件绕过")]),a._v(" "),s("blockquote",[s("p",[a._v("htaccess是什么？\n.htaccess文件也被成为分布式配置文件，提供了针对目录改变配置的方法，在一个特定的文档目录中放置一个包含一个或多个指令的\n文件， 以作用于此目录及其所有子目录。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("AddType application/x-httpd-php .jpg\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("这个配置代表着.jpg文件会当做php来解析")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<FilesMatch "haha">\nSetHandler application/x-httpd-php \n</FilesMatch>\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v('包含 "haha" 这个字符串，都可以被以 php 的方式来解析')]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<FilesMatch ".jpg">\nSetHandler application/x-httpd-php\n</FilesMatch>\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v('包含 ".jpg" 这个字符串，都可以被以 php 的方式来解析')]),a._v(" "),s("blockquote",[s("p",[a._v("无法将文件名命名为.htaccess，怎么办？\n可以使用cmd的重命名")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ren 17.txt .htaccess\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h2",{attrs:{id:"大小写绕过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大小写绕过"}},[a._v("#")]),a._v(" 大小写绕过")]),a._v(" "),s("p",[a._v("如果服务端没有严格过滤，可以通过大小写方式 "),s("code",[a._v(".Php")]),a._v(" 来绕过，Windows默认不区分大小写")]),a._v(" "),s("h2",{attrs:{id:"文件头绕过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件头绕过"}},[a._v("#")]),a._v(" 文件头绕过")]),a._v(" "),s("p",[a._v("如果判断是否为图片，添加GIF图片的文件头 "),s("code",[a._v("GIF89a")]),a._v("，绕过GIF图片检查")]),a._v(" "),s("h2",{attrs:{id:"文件后缀空绕过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件后缀空绕过"}},[a._v("#")]),a._v(" 文件后缀空绕过")]),a._v(" "),s("p",[a._v("在上传后文件名后面加一个空格，上传上去后空格会被自动的省略，但是看源码可知道，源码中黑名单中没有过滤空值，php和php ，是不一样的")]),a._v(" "),s("h2",{attrs:{id:"文件后缀-点-绕过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件后缀-点-绕过"}},[a._v("#")]),a._v(" 文件后缀.(点)绕过")]),a._v(" "),s("p",[a._v("Windows有一个特性，会自动去掉后缀名最后的.")]),a._v(" "),s("h2",{attrs:{id:"data-windows文件流绕过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#data-windows文件流绕过"}},[a._v("#")]),a._v(" ::$DATA(Windows文件流绕过)")]),a._v(" "),s("blockquote",[s("p",[a._v("NTFS交换数据流(ADS)，ADS是NTFS磁盘格式的一个特性，在NTFS文件系统下，每个文件都可以存在多个数据流。通俗的理解，就是其它文件可以“寄宿”在某个文件身上，而在资源管理器中却只能看到宿主文件，找不到寄宿文件。")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" abcd "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" a.txt:b.txt\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("将abcd写入 "),s("code",[a._v("a.txt:b.txt")]),a._v(" 生成一个 "),s("code",[a._v("a.txt")])]),a._v(" "),s("p",[a._v("然后再试试 "),s("code",[a._v("a.txt::$DATA")]),a._v(" ::$DATA默认不修改文件流的情况 生成一个正常的 "),s("code",[a._v("a.txt")])]),a._v(" "),s("p",[a._v('利用Windows特性，可在后缀名中加"::$DATA"绕过')]),a._v(" "),s("h2",{attrs:{id:"构造文件后缀绕过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造文件后缀绕过"}},[a._v("#")]),a._v(" 构造文件后缀绕过")]),a._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$file_ext")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("strrchr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$file_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("检测末尾最后是否是. (为了防御双写.绕过)")]),a._v(" "),s("p",[a._v("可以写一个空，最后反正有首尾去空，干完这一切后他才开始进行判断是否是非法文件")]),a._v(" "),s("p",[a._v("尝试构建一个. . (前面去掉.然后检验.不存在，再去空格，留下 "),s("code",[a._v("php.")]),a._v(" ，然后php.不属于 "),s("code",[a._v("$deny_ext")]),a._v(" 数组中存在的，当然就直接提交了，然\n后因为Windows自动去点，于是乎php后缀就出来了)")]),a._v(" "),s("h2",{attrs:{id:"双写绕过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双写绕过"}},[a._v("#")]),a._v(" 双写绕过")]),a._v(" "),s("p",[a._v("将检测到的危险字符替换为空，php被替换为空是空，那么 "),s("code",[a._v("pphphp")]),a._v(" 被替换为空就会变为php即可绕过")]),a._v(" "),s("h2",{attrs:{id:"_00和00截断绕过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_00和00截断绕过"}},[a._v("#")]),a._v(" %00和00截断绕过")]),a._v(" "),s("p",[a._v("在 "),s("code",[a._v("php5.3.4")]),a._v(" 以下，并且 "),s("code",[a._v("php.ini")]),a._v(" 中 "),s("code",[a._v("magic_quotes_gpc: off")]),a._v(" 可 %00 截断")]),a._v(" "),s("p",[s("code",[a._v("%00")]),a._v(" 实际上和 "),s("code",[a._v("00")]),a._v(" 截断是一模一样的原理，只不过 "),s("code",[a._v("%00")]),a._v(" 是经过URL编码的，"),s("code",[a._v("%00")]),a._v(" 解码后就是 "),s("code",[a._v("0x00")]),a._v(" 截断的那个字符")]),a._v(" "),s("p",[s("code",[a._v("1.php%00.jpg")]),a._v(" 传参之后，有些过滤都是直接匹配字符串，他强行匹配到了结尾是"),s("code",[a._v(".jpg")]),a._v("，然后允许上传，但是php的函数去执行的时候他读取到 "),s("code",[a._v("0x00")]),a._v(" 认为结束了，那么这个文件就变成了 "),s("code",[a._v("1.php")])]),a._v(" "),s("blockquote",[s("p",[a._v("注意：POST方式提交save_path，问题在于POST方式我们用%00却失效了，这是因为POST传参并不会URL解码，所以需要我们该Hex改为00")])]),a._v(" "),s("h2",{attrs:{id:"条件竞争绕过"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件竞争绕过"}},[a._v("#")]),a._v(" 条件竞争绕过")]),a._v(" "),s("p",[a._v("上传文件后，最后因为过滤或者因为其他原因被删除了，可以使用条件竞争，实际上是和unlink，是和删除文件的函数进行竞争")]),a._v(" "),s("p",[a._v("假如不断的上传发包，同时也不断的访问那个上传上去的文件的地址，函数执行都是要时间的，这边上传上去，且没有删除，那个时间可能很短，被访问到了，就可以执行PHP了")]),a._v(" "),s("p",[a._v("可以上传一个php然后访问后，由这个php去写一个马")]),a._v(" "),s("div",{staticClass:"language-php line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[a._v("<?php")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'<?php @eval($_POST[\\'a\\'])?>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file_put_contents")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[a._v("'1.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token delimiter important"}},[a._v("?>")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])])}),[],!1,null,null,null);t.default=v.exports}}]);