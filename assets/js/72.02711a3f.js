(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{813:function(a,p,s){"use strict";s.r(p);var t=s(95),_=Object(t.a)({},(function(){var a=this,p=a.$createElement,s=a._self._c||p;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"web容器解析漏洞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web容器解析漏洞"}},[a._v("#")]),a._v(" Web容器解析漏洞")]),a._v(" "),s("h2",{attrs:{id:"iis5-x-iis6-0解析漏洞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iis5-x-iis6-0解析漏洞"}},[a._v("#")]),a._v(" IIS5.x/IIS6.0解析漏洞")]),a._v(" "),s("p",[a._v("IIS6.0除了将ASP后缀当做ASP进行解析的同时，当文件后缀名字为 "),s("code",[a._v(".asa")]),a._v(" "),s("code",[a._v(".cer")]),a._v(" "),s("code",[a._v(".cdx")]),a._v("也会当做asp去解析，这是因为IIS6.0在应用程序扩展中默认设置了.asa .cer .cdx 都会调用 "),s("code",[a._v("asp.dll")])]),a._v(" "),s("p",[a._v("IIS 6.0在处理含有特殊符号的文件路径时会出现逻辑错误，从而造成文件解析漏洞。这一漏洞有两种完全不同的利用方式：")]),a._v(" "),s("p",[s("code",[a._v("test.asp;.jpg")]),a._v(" "),s("code",[a._v("test.asp/123.jpg")]),a._v(" 都会当做asp进行解析")]),a._v(" "),s("h2",{attrs:{id:"iis-7-0-iis7-5-nginx-8-03畸形解析漏洞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iis-7-0-iis7-5-nginx-8-03畸形解析漏洞"}},[a._v("#")]),a._v(" IIS 7.0/IIS7.5/Nginx<8.03畸形解析漏洞")]),a._v(" "),s("p",[s("code",[a._v("1.jpg/x.php")])]),a._v(" "),s("p",[s("code",[a._v("x.asp%00.jpg")])]),a._v(" "),s("p",[s("code",[a._v("a.aspx.a;.a.aspx.jpg..jpg")])]),a._v(" "),s("h2",{attrs:{id:"apache解析漏洞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#apache解析漏洞"}},[a._v("#")]),a._v(" Apache解析漏洞")]),a._v(" "),s("p",[a._v("Apache是从右边到左开始判断解析，如果为不可识别，就继续往左判断，可以用1.php.xxx")]),a._v(" "),s("h2",{attrs:{id:"cgi解析漏洞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cgi解析漏洞"}},[a._v("#")]),a._v(" CGI解析漏洞")]),a._v(" "),s("p",[a._v("Nginx默认是以CGI的方式支持PHP解析的，普遍的做法是在Nginx配置文件中通过正则匹配设SCRIPT_FILENAME。")]),a._v(" "),s("p",[a._v("当访问 "),s("code",[a._v("www.xx.com/phpinfo.jpg/1.php")]),a._v(" 这个URL时，"),s("code",[a._v("$fastcgi_script_name")]),a._v(" 会被设置 "),s("code",[a._v("phpinfo.jpg/1.php")]),a._v("，然后构造成SCRIPT_FILENAME(绝对路径)传递给PHP CGI,如果开启了fix_pathinfo选项，那么就会触发在PHP中的如下逻辑：\nPHP会认为SCRIPT_FILENAME(绝对路径)是phpinfo.jpg，而1.php是PATH_INFO，所以就会phpinfo.jpg作为PHP文件来解析了.\n也是一个逻辑问题，所以说我们只需要在正常的.jpg后面加/.php就可以成功的绕过解析")])])}),[],!1,null,null,null);p.default=_.exports}}]);